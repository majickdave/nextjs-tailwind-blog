'use strict'
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self['webpackHotUpdate_N_E']('pages/_app', {
  /***/ './data/siteMetadata.js':
    /*!******************************!*\
  !*** ./data/siteMetadata.js ***!
  \******************************/
    /***/ function (module, __unused_webpack_exports, __webpack_require__) {
      eval(
        '/* provided dependency */ var process = __webpack_require__(/*! process */ "./node_modules/next/dist/build/polyfills/process.js");\n\nvar siteMetadata = {\n    title: "David Samuel and his Data Science Portfolio",\n    author: "David Samuel",\n    headerTitle: "DavesBlog",\n    description: "Projects and Experiences of David Samuel",\n    language: "en-us",\n    theme: "system",\n    siteUrl: "https://tailwind-nextjs-starter-blog.vercel.app",\n    siteRepo: "https://github.com/timlrx/tailwind-nextjs-starter-blog",\n    siteLogo: "/static/images/logo.png",\n    image: "/static/images/avatar.png",\n    socialBanner: "/static/images/twitter-card.png",\n    email: "address@yoursite.com",\n    github: "https://github.com/majickdave",\n    twitter: "https://twitter.com/majickdave",\n    linkedin: "https://www.linkedin.com/in/datascienceinsight",\n    jekyll: "https://www.linkedin.com/in/datascienceinsight",\n    locale: "en-US",\n    analytics: {\n        // If you want to use an analytics provider you have to add it to the\n        // content security policy in the `next.config.js` file.\n        // supports plausible, simpleAnalytics, umami or googleAnalytics\n        plausibleDataDomain: "",\n        simpleAnalytics: false,\n        umamiWebsiteId: "",\n        googleAnalyticsId: "",\n        posthogAnalyticsId: ""\n    },\n    newsletter: {\n        // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus\n        // Please add your .env file and modify it according to your selection\n        provider: "buttondown"\n    },\n    comment: {\n        // If you want to use a commenting system other than giscus you have to add it to the\n        // content security policy in the `next.config.js` file.\n        // Select a provider and use the environment variables associated to it\n        // https://vercel.com/docs/environment-variables\n        provider: "giscus",\n        giscusConfig: {\n            // Visit the link below, and follow the steps in the \'configuration\' section\n            // https://giscus.app/\n            repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n            repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n            category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n            categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n            mapping: "pathname",\n            reactions: "1",\n            // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n            metadata: "0",\n            // theme example: light, dark, dark_dimmed, dark_high_contrast\n            // transparent_dark, preferred_color_scheme, custom\n            theme: "light",\n            // Place the comment box above the comments. options: bottom, top\n            inputPosition: "bottom",\n            // Choose the language giscus will be displayed in. options: en, es, zh-CN, zh-TW, ko, ja etc\n            lang: "en",\n            // theme when dark mode\n            darkTheme: "transparent_dark",\n            // If the theme option above is set to \'custom`\n            // please provide a link below to your custom theme css file.\n            // example: https://giscus.app/themes/custom_example.css\n            themeURL: ""\n        },\n        utterancesConfig: {\n            // Visit the link below, and follow the steps in the \'configuration\' section\n            // https://utteranc.es/\n            repo: process.env.NEXT_PUBLIC_UTTERANCES_REPO,\n            issueTerm: "",\n            label: "",\n            // theme example: github-light, github-dark, preferred-color-scheme\n            // github-dark-orange, icy-dark, dark-blue, photon-dark, boxy-light\n            theme: "",\n            // theme when dark mode\n            darkTheme: ""\n        },\n        disqusConfig: {\n            // https://help.disqus.com/en/articles/1717111-what-s-a-shortname\n            shortname: process.env.NEXT_PUBLIC_DISQUS_SHORTNAME\n        }\n    }\n};\nmodule.exports = siteMetadata;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/siteMetadata.js\n'
      )

      /***/
    },
})
